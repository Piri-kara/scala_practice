object Sample17{
  // メソッドとは処理のひとまとまりのこと
  // mainメソッド以外に自由に記述できる
  /* 
  def メソッド名(引数リスト):結果型 = {
    メソッド本体
  }
  の形で記述される
  */

  // メソッドの成果が特にない場合、Unit型になる
  def main(args: Array[String]):Unit={
    val a=5
    val b=8
    // メソッドの持ち主を記述してメソッドを呼び出す
    // この場合、Sample17オブジェクトがもつメソッドという形で呼び出している
    // 同じシングルトンオブジェクトであれば省略は可能
    println(a+"+"+b+"="+Sample17.sum(a,b))
    greet()
  }
  // sumメソッド
  // 引数は仕事をするために必要となるデータ（インプットデータ）のこと
  // メソッド利用者から2つの数字を受け取る
  // メソッドの中で宣言するローカル変数は型推論が行われるため型宣言の必要がなかった
  // 引数は型推論が行われないため、型宣言が必要になる
  // 結果型については型推論が可能であるため、省略可能
  // カンマで区切って複数渡せる
  def sum(x:Int, y:Int):Int={
    x + y
  }
  // 特に引数を受け取らないメソッドの場合は()を省略できる
  def greet()=println("Good morning!")
}